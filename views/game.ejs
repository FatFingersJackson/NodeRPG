<div id="gamesection">

    <table id="gameboard">
        
    </table>

    <div id="messagedialog" hidden>
        
    </div>

</div>

<script>

// Used for database actions. This is later
// to restrict possible pranks with username

var PLAYER_ID;
var PLAYER_X = -1;
var PLAYER_Y = -1;

function draMap(map)
{
    var tileGrid = "";
    map.tiles = [];
    for (i = 0 ; i < map.height;i++)
    {
        map.tiles[i] = [];
        tileGrid += '<tr>';
        for(var j = 0; j < map.width; j++)
        {
            tileGrid += `<td class="gametile ${map.terrain}" id="${j}-${i}"></td>`;
            
        }
        tileGrid += '</tr>';
    }
    //console.log('x-y'.split('-')[1])
    $('#gameboard').html(tileGrid)

    // Place objects in map. Also move map.objects to map.tiles
    // Map.objects is easier to write and view, but logic is easier with .tiles
    for(var i = 0; i < map.mapObjects.length; i++ )
    {
        let o = map.mapObjects[i];
        let x = o.x || 0;
        let y = o.y || 0;
        map.tiles[y][x] = o;
        let tileid = o.x + "-" + o.y;
        let oid = o.objectId;
        
        console.log("append",oid,tileid);

        $mapO = $(`<div id="${oid}" class="${o.objectClass}"></div>`);
        if(o.avatar)
        {
            console.log("add avatar")
            $mapO.append( `<img class="avatar" src="./images/${o.avatar}" />` )
        }


        
        $('#'+tileid).append($mapO);

        
    }
}



/*-- PLAYER ---*/
/*
const mainPlayer = {
    x:0,
    y:0,
    avatar:`<div id="${playerUsername}" class="player"><img class="avatar" src="images/stiki.png"/></div>`,
    char: null,
    spawn: function(x,y){
        
        if( map.tiles[this.y][this.x] != null  )
        {
            // A logic to search empty space
        }
         this.char = $(this.avatar);
         $(`#${this.x}-${this.y}`).append( this.char );  
    },
    move: function(x,y){
        
        let xDest = x + this.x;
        let yDest = y+ this.y;
        
        if( map.tiles[yDest] == null || map.tiles[yDest][xDest] != null  )
        {
            
            return;
        }
        this.x = xDest;
        this.y = yDest;
        
        $(`#${xDest}-${yDest}`).append( $(this.char) );  
    }
};

mainPlayer.spawn();
*/

$(document).keypress(function(e) {
    clearMessage();
    movePlayer(e.which)
});

$(document).on('click', function(){
    clearMessage();
})

function move(x, y)
{
    // TODO CHANGE from username so cheating harder
    socket.emit("movePlayer",{ x:x,y:y});
}

// These movefunctions are kind of single player
function movePlayer(dirInt){

    

    switch (dirInt) {
        //W
        case 119:
            move(0,-1);
            break;
            //A
        case 97:
            move(-1,0);
            break;
            //D
        case 100:
            move(1,0);
            break;
            //S
        case 115:
            move(0,1);
            break;
        default:
            break;
    }
}

function showMessage(message)
{
    $('#messagedialog').html(message)
    $('#messagedialog').show();
}

function clearMessage()
{
    $('#messagedialog').hide();
}


// ---- SOCKET EVENTS ---- // 

socket.on('connect',function(){
    socket.emit('registerConnection',{ username: playerUsername })
});

socket.on('message',function(data){
              
                showMessage(data.message);
            });

socket.on('loadMap',function(data){
    console.log(data)
    draMap(data.map)
});

socket.on('mapUpdate', function(data){
    
    let removed = data.remove;
    if(removed)
    {
        console.log("Should remove removed")
        for(let o of removed)
        {
            $('#'+o.objectId).remove();
        }
    }

    let objects = data.update.mapObjects;
    //console.log("Update map", objects)

    for( let o of objects )
    {

        if($('#'+o.objectId).length > 0 )
        {
            //console.log(o.x,o.y)
            $(`#${o.x}-${o.y}`).append( $('#'+o.objectId) )
            //let og = $('#'+o.objectId);
        }
        else{
            createObject(o);
        }
    }
});

function createObject(obj)
{
    console.log("create object" , obj);
    
    let oid = obj.objectId;
    let oclass = obj.objectClass;
    let tileid = `#${obj.x}-${obj.y}`;

    $mapO = $(`<div id="${oid}" class="${oclass}"></div>`);
        if(obj.avatar)
        {
            console.log("add avatar")
            $mapO.append( `<img class="avatar" src="./images/${obj.avatar}" />` )
        }
        $(tileid).append($mapO);
}


</script>
